---
title: Events
subTitle: API
nav: docs
description: Owl Carousel Documentation

sort: 3
tags:
- API
---

{{#markdown }}
## Events

> Events are provided by Owl Carousel in strategic code locations. This gives you the ability to listen for any changes and perform your own actions.

```
var owl = $('.owl-carousel');
owl.owlCarousel();

// Listen to owl events:
owl.on('changed.owl.carousel', function(event) {
	...
})

```

You could also trigger events by yourself to control Owl Carousel:

```
var owl = $('.owl-carousel');
owl.owlCarousel();

// Go to the next item
$('.customNextBtn').click(function() {
	owl.trigger('next.owl.carousel');
})

// Go to the previous item
$('.customPrevBtn').click(function() {
	// With optional speed parameter
	// Parameters has to be in square bracket '[]'
	owl.trigger('prev.owl.carousel', [300]);
})

```

### Callbacks

Instead of attaching an event handler you can also just add a callback to the options of Owl Carousel.

```
$('.owl-carousel').owlCarousel({
	onDragged: callback
});

function callback(event) {
	...
}
```

### Data

Each event passes very useful information within the [event object](http://api.jquery.com/category/events/event-object/). Based on the example above:

```Javascript
function callback(event) {
	var element   = event.target;    // DOM element, in this example .owl-carousel
	var data      = event.data;      // Data object contains status information
	var name      = event.type;      // Name of the event, in this example dragged
	var namespace = event.namespace; // Namespace of the event, in this example owl.carousel
}
```

### Events

{{#each events}}
#### {{name}}

Type: `{{type}}`<br />{{#isnt callback undefined}}Callback: `{{callback}}`<br/>{{/isnt}}{{#isnt param undefined}}Parameter: `{{param}}`<br/>{{/isnt}}

{{desc}}

------
{{/each}}

{{/markdown }}

